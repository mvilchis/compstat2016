{
    "collab_server" : "",
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\nget_exponential<- function (item, lambda) {\n  return (log(1-item)/ (-1*lambda))\n}\nget_chi_squared<- function(experimental, real) {\n  (experimental - real)^2 / real \n}\nshinyServer(function(input, output) {\n\n  output$trendPlot <- renderPlotly({\n    uni <- runif(input$iterations, 0,1)\n    experimental_exp <- sapply(uni, function(item)get_exponential(item,input$lambda))\n    real_exp <-rexp(input$iterations,rate=input$lambda)\n    \n    #hist(experimental_exp, breaks = input$iterations/10, col = 'darkgray', border = 'white')\n    plot_ly(x = experimental_exp, type = \"histogram\", opacity = .3) %>%\n      add_trace (x=real_exp, type = \"histogram\",opacity = .3, colors = \"gray\") \n  \n  })\n\n})\n",
    "created" : 1472075047357.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3857038693",
    "id" : "830851E9",
    "lastKnownWriteTime" : 1472078907,
    "last_content_update" : 1472078907003,
    "path" : "~/Tarea/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}